
// CSS对Chrome浏览器滚动条的处理
&::-webkit-scrollbar {
  width: 5px;
  height: 5px;
}
&::-webkit-scrollbar-track {
  border-radius: 2px;
}
&::-webkit-scrollbar-thumb {
  background: #d9dbdf;
  border-radius: 0;
}

// 空心三角箭头，本例箭头向左
.arrow {
  border-right: 2px solid #343c99;
  border-top: 2px solid #343c99;
  border-left: 2px solid transparent;
  border-bottom: 2px solid transparent;
  height: 10px;
  width: 10px;
  margin:50px auto 0;
  transform: rotate(deg);
  -webkit-transform: rotate(0deg);
}

// 实心箭头
.test {
  width:0;
  height: 0;
  border-top: 100px solid red ;
  border-bottom: 100px solid blue;
  border-left: 100px solid green;
  border-right: 100px solid yellow;
}

// 设置四周阴影
.box-shadow: 0 0 20px #ccc;

// 下方阴影
box-shadow: 0 5px 4px -4px black;

//相邻两侧阴影
box-shadow: 3px 3px 6px -3px black;

//对侧阴影
box-shadow: 5px 0 5px -5px black, -5px 0 5px -5px black;

// 开发中碰到在IOS下div的滚动条滚动不流畅
.css{
  overflow:auto;/* winphone8和android4+ */
  -webkit-overflow-scrolling: touch; /* ios5+ */
}

/**
 * antd Table省略号
 * <div style={{ width: '100%', position: 'relative' }}>
 *   <div className="oe" style={{ position: 'absolute', top: '50%', transform: 'translateY(-50%)', height: 16, width: '100%' }}>
 *     {text}
 *   </div>
 * </div>
 */
.oe {
  overflow: hidden;
  white-space: nowrap;
  vertical-align: bottom;
  text-overflow: ellipsis;
}

// 手机网页1px边框处理
1、
1px分割线：
p {
  background: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg'><line x1='0' y1='100%' x2='100%' y2='100%' stroke='red' /></svg>");
}
1px边框：
div {
  background: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' fill='none' stroke='red' /></svg>");
}
1px带圆角的边框：
div {
  border-radius:5px;
  background: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' rx='5' fill='none' stroke='red' /></svg>");
}
2、
.border-1px(@position, @color: #d2d2d2) {
  position: relative;
  &::after{
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 200%;
    @{position}:1px solid @color;
    color: @color;
    height: 200%;
    -webkit-transform-origin: left top;
    transform-origin: left top;
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
    pointer-events: none; /* 防止点击触发 */
    box-sizing: border-box;
    @media screen and (min-device-pixel-ratio:3),(-webkit-min-device-pixel-ratio:3){
      width: 303%;
      height: 303%;
      -webkit-transform: scale(0.33);
      transform: scale(0.33);
    }
  }
}

// 多行文本省略号
.wrap {
    position: relative;
    /*line-height和height要相互配合，显示多少行就省略，就是line-height多少倍数*/
    line-height: 1.2em;
    max-height: 3.6em;
    /*此属性看需求来判断是否设置，因为设置了padding-right，多腾出了点位置，该值一般为padding-right的值的负值*/
    /*margin-left: -1em;*/
    /*此值写死成1em就好，因为省略号大概就是占用1em的空间*/
    padding-right: 1em;
    text-align: justify;
    overflow: hidden;
}

.wrap:before {
    position: absolute;
    right: 0;
    bottom: 0;
    content: '...';
}

.wrap:after {
    position: absolute;
    right: 0;
    /*宽高写死1em就好，因为省略号大概就是占用1em的空间，用来遮挡住省略号，也基本上跟wrap的padding-right一致*/
    width: 1em;
    /*与wrap的行高实际值保持一致*/
    height: 1.2em;
    content: '';
    /*要跟所在背景颜色一致才能遮挡住省略号后觉得没异样*/
    background-color: #fff;
}

// CSS实现loading旋转效果
.loading {
    width: 46px;
    height: 46px;
    border: 1px solid #d9d9d9;
    border-top-color: #217346;
    border-radius: 50%;
    -webkit-border-radius: 50%;
    animation: spin 1s infinite linear;
    -webkit-animation: spin 1s infinite linear;
}
.spin {
    0% {
        transform: rotate(0);
        -webkit-transform: rotate(0);
    }
    100% {
        transform: rotate(1turn);
        -webkit-transform: rotate(1turn);
    }
}

// css改变默认checkbox样式
// html
<input type="checkbox" id="hello">
<label for="hello">hello</label>
// css
input[type="checkbox"]{
  display:none;
}
input[type="checkbox"] + label:before {
  content: '';
  display: inline-block;
  width: 24px;
  height: 24px;
  border:1px solid;
  border-radius: 50%;
  vertical-align: middle;
  margin-right: 8px;
  transition: all .5s;
}
input[type="checkbox"]:checked + label:before {
  background: red;
}

